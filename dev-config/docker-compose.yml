version: "3.8"

services:
  fronted:
    build:
      context: ../front
      dockerfile: ../dev-config/Dockerfile.front
    ports:
      - published: 3000
        target: 3000
      # - "3000:3000"
    volumes:
      - ../front:/usr/app
    networks:
      - strapi: null
  cms:
    build: 
      context: ../cms
      dockerfile: ../dev-config/Dockerfile.cms
    ports:
      - published: 1337
        target: 1337
      # - "1337:1337"
    volumes:
      - ../cms:/usr/app
    environment:
      APP_KEYS: ${APP_KEYS}
      API_TOKEN_SALT: ${API_TOKEN_SALT}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      TRANSFER_TOKEN_SALT: ${TRANSFER_TOKEN_SALT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_HOST: cms
      DATABASE_CLIENT: postgres
      DATABASE_PORT: ${DATABASE_PORT}
    networks:
      - strapi: null
  db: 
    image: postgres:15.4-alpine3.18
    restart: always
    ports:
      - published: 5432
        target: 5432
      # - "5432:5432"
    environment:
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_DB: cms${DATABASE_NAME}
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      - strapi: null
networks:
  strapi:
volumes:
  db: